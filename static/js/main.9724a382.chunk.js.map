{"version":3,"sources":["Navbar.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","id","this","props","account","width","height","src","Identicon","toString","Component","Main","role","style","maxowidth","posts","map","post","key","author","content","window","web3","utils","fromWei","tipAmount","name","onClick","event","toWei","tipPost","target","onSubmit","preventDefault","postContent","value","createPost","type","ref","input","placeholder","required","App","state","postChat","postCount","loading","bind","a","loadWeb3","loadBlockChainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","postchatData","PostChat","networks","Contract","abi","address","methods","Postcount","call","i","sort","b","send","from","once","receipt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9724a382.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Identicon from 'identicon.js';\r\n\r\n\r\nclass Navbar extends Component{\r\n\r\n  render() {\r\n  return (\r\n    <nav className=\"navbar navbar-inverse bg-dark shadow\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n          <a className=\"navbar-brand\" href=\"#\">PostChat</a>\r\n        </div>\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li>\r\n          <small>\r\n          <span id=\"account\"className=\"glyphicon glyphicon-user bg-success\"></span>{this.props.account}\r\n          </small>\r\n          {this.props.account\r\n           ? <img className=\"ml-2\"\r\n              width='30'\r\n              height='30'\r\n              src={`data:image/png;base64, ${new Identicon(this.props.account,30).toString()}`}\r\n            />\r\n            :<span></span>\r\n          }\r\n\r\n        </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Identicon from 'identicon.js';\r\n\r\n\r\nclass Main extends Component{\r\n\r\n  render() {\r\n  return (\r\n    <div className=\"container-fluid mt-5\">\r\n     <div className=\"row\">\r\n      <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxowidth: '500px'}}>\r\n       <div className=\"content mr-auto ml-auto\">\r\n        <p>&nbsp;</p>\r\n       {this.props.posts.map((post, key) => {\r\n         return(\r\n           <div className=\"card mb-4\" key={key}>\r\n            <div className=\"card-header\">\r\n              <img className=\"ml-2\"\r\n                width='30'\r\n                height='30'\r\n                src={`data:image/png;base64, ${new Identicon(post.author,30).toString()}`}\r\n              />\r\n             <small className=\"text-muted\">{post.author}</small>\r\n            </div>\r\n            <ul id=\"postList\" className=\"list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <p>{post.content}</p>\r\n            </li>\r\n          <li key={key} className=\"list-group-item py-2\">\r\n           <small className=\"float-Eleft mt-1 text-muted\">\r\n            TIPS: {window.web3.utils.fromWei(post.tipAmount.toString(), 'Ether')} ETH\r\n          </small>\r\n          <button\r\n           className=\"btn btn-link btn-sm float-right pt-0\"\r\n           name={post.id}\r\n           onClick= {(event) =>{\r\n\r\n             let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\r\n             this.props.tipPost(event.target.name, tipAmount)\r\n           }}>\r\n              TIP 0.1 ETH\r\n\r\n         </button>\r\n        </li>\r\n       </ul>\r\n      </div>\r\n         )\r\n       })}\r\n       <p>&nbsp;</p>\r\n       <form onSubmit={(event) => {\r\n         event.preventDefault()\r\n         const content=this.postContent.value\r\n         this.props.createPost(content)\r\n       }}>\r\n        <div className= \"form-group mr-sm-2\">\r\n         <input\r\n          id=\"postContent\"\r\n          type=\"text\"\r\n          ref={(input) => {this.postContent=input}}\r\n          className=\"form-control\"\r\n          placeholder=\"type here\"\r\n          required />\r\n       </div>\r\n       <button type=\"submit\" className=\"btn btn-primary btn-block\">Share Post </button>\r\n       <p>&nbsp;</p>\r\n      </form>\r\n       </div>\r\n     </main>\r\n    </div>\r\n  </div>\r\n  );\r\n }\r\n}\r\n\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Identicon from 'identicon.js';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport PostChat from './contracts/PostChat.json';\n\n\nclass App extends Component{\n  async componentWillMount() {\n      await this.loadWeb3()\n      await this.loadBlockChainData()\n    }\n  async loadWeb3() {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum)\n        await window.ethereum.enable()\n    }\n      else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider)\n    }\n      else{\n        window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n}\nasync loadBlockChainData(){\n  const web3 = window.web3\n  //load accounts\n  const accounts = await web3.eth.getAccounts()\n  this.setState({account: accounts[0]})\n  //Get Network ID\n  const networkId = await web3.eth.net.getId()\n\n    //load PostChat smart contract\n    const postchatData = PostChat.networks[networkId]\n    if(postchatData){\n     const postChat = new web3.eth.Contract(PostChat.abi, postchatData.address)\n      this.setState({postChat: postChat})\n\n      const postCount = await postChat.methods.Postcount().call()\n      this.setState({postCount: postCount})\n\n      //load posts\n      for(var i = 1; i <= postCount; i++){\n        const post = await postChat.methods.posts(i).call()\n        this.setState({\n          posts: [...this.state.posts, post]\n        })\n      }\n      this.setState({\n        posts: this.state.posts.sort((a,b) => b.tipAmount - a.tipAmount)\n      })\n    this.setState({loading: false})\n  } else{\n   window.alert('contract was not deployed to test network.')\n\nthis.setState({loading:false})\n}\n}\n\ncreatePost(content){\n  this.setState({loading: true})\n  this.state.postChat.methods.createPost(content).send({from: this.state.account})\n  .once('receipt', (receipt) => {\n    this.setState({loading: false})\n  })\n}\n\ntipPost(id, tipAmount){\n  this.setState({loading: true})\n  this.state.postChat.methods.tipPost(id).send({from: this.state.account, value: tipAmount})\n  .once('receipt', (receipt) => {\n    this.setState({loading: false})\n  })\n\n}\nconstructor(props) {\n  super(props)\n  this.state = {\n    account:'',\n    postChat: null,\n    postCount:0,\n    posts:[],\n    loading: true\n  }\n  this.createPost=this.createPost.bind(this)\n  this.tipPost=this.tipPost.bind(this)\n}\n\n  render() {\n  return (\n    <div>\n      <Navbar account={this.state.account} />\n      {this.state.loading\n        ? <div id=\"loader\" className=\"text-center\"><p>Loading...</p></div>\n        :<Main\n        posts={this.state.posts}\n        createPost={this.createPost}\n        tipPost={this.tipPost}\n        />\n      }\n\n  </div>\n  );\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}